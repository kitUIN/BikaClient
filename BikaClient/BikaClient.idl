import "Responses/Responses.idl";
import "Utils/Utils.idl";
namespace BikaClient
{
    enum ImageQualityMode
    {
        ORIGINAL = 0,
        HIGH = 1,
        MEDIUM = 2,
        LOW = 3,
    };
    enum FileServerMode
    {
        S1 = 0,
        S2 = 1,
        S3 = 2,
    };
    [default_interface]
    runtimeclass BikaHttpClient
    {
        BikaHttpClient();
        BikaHttpClient(String token);
        BikaHttpClient(String token, BikaClient.ImageQualityMode imageQuality);
        BikaHttpClient(String token, BikaClient.ImageQualityMode imageQuality,String fileServer);
        String Token;
        BikaClient.ImageQualityMode ImageQuality;
        static String FileServerModeToString(BikaClient.FileServerMode fileServerMode);
        static BikaClient.FileServerMode FileServerStringToMode(String fileServerString);
        static String ImageQualityModeToString(BikaClient.ImageQualityMode imageQualityMode);
        static BikaClient.ImageQualityMode ImageQualityStringToMode(String imageQualityString);
        void FileServer(BikaClient.FileServerMode fileServerMode);
        String FileServer();
        String APPVersion{ get; };
        Int32 APPChannel;
        Windows.Foundation.Diagnostics.LoggingChannel GetLoggingChannel();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.LoginResponse> Login(String email, String password);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.UserResponse> PersonInfo();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.CategoriesResponse> Categories();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.KeywordsResponse> Keywords();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> Comics(Int32 page, String title, BikaClient.Utils.SortMode sort);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> Comics(Int32 page, BikaClient.Utils.SortMode sort);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.BookInfoResponse> BookInfo(String bookId);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.EpisodesResponse> Episodes(String bookId, Int32 page);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.PicturesResponse> Pictures(String bookId, Int32 epsId, Int32 page);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> PersonFavourite(BikaClient.Utils.SortMode sort, Int32 page);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> Recommend(String bookId);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.CommentsResponse> PersonComment(Int32 page);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> Search(Int32 page, String keywords, BikaClient.Utils.SortMode sort, Windows.Data.Json.JsonArray categories);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> Search(Int32 page, String keywords, BikaClient.Utils.SortMode sort);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> Search(Int32 page, String keywords);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ComicsResponse> Random();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> Favourite(String bookId);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> Like(String bookId);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.CommentsResponse> Comments(String bookId, Int32 page);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> SendComments(String bookId, String content);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> LikeComments(String commentId);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> ReportComments(String commentId);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> PunchIn();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> SetSlogan(String slogan);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> SetPassword(String oldPassword, String newPassword);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.JsonResponse> SetTitle(String userId, String title);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.ActionResponse> ReplyComment(String commentId, String content);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.CommentsResponse> GetReplyComment(String commentId, Int32 page);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.JsonResponse> PlatformInit();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.JsonResponse> Collections();
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.JsonResponse> Announcements(Int32 page);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.JsonResponse> Register(String email, String password, String name, String birthday, BikaClient.Utils.Gender gender, String question1, String question2, String question3, String answer1, String answer2, String answer3);
        Windows.Foundation.IAsyncOperation<BikaClient.Responses.JsonResponse> SetAvatar(Windows.Storage.Streams.IBuffer buffer,String fileType);

    }
}