import "Blocks/Blocks.idl";
namespace BikaClient.Responses
{
	enum Actions
	{
		OK = 0,
		Fail = 1,
		Like = 2,
		UnLike = 3,
		Favourite = 4,
		UnFavourite = 5,
		Success = 6,
		Unknown = 7,
	};
	unsealed runtimeclass IResponse
	{
		IResponse(Windows.Data.Json.JsonObject json);
		void IInit(Windows.Data.Json.JsonObject json);
		Int32 Code{ get; };
		String Message{ get; };
		String Error{ get; };
		String Detail{ get; };
		String Json{ get; };
	}
	unsealed runtimeclass IPage: IResponse
	{
		IPage();
		Int32 Page{ get; };
		Int32 Pages{ get; };
		Int32 Total{ get; };
		Int32 Limit{ get; };
	}

	runtimeclass LoginResponse : IResponse
	{
		LoginResponse();
		LoginResponse(Windows.Data.Json.JsonObject json);
		String Token{ get; };
	}
	runtimeclass CategoriesResponse : IResponse
	{
		CategoriesResponse(Windows.Data.Json.JsonObject json);
		CategoriesResponse(Windows.Data.Json.JsonObject json,String fileServer);
		Windows.Foundation.Collections.IObservableVector<BikaClient.Blocks.CategoriesBlock> Categories;
	}
	runtimeclass UserResponse : IResponse
	{
		UserResponse(Windows.Data.Json.JsonObject json);
		UserResponse(Windows.Data.Json.JsonObject json,String fileServer);
		BikaClient.Blocks.UserBlock User;
	}
	runtimeclass ComicsResponse : IPage
	{
		ComicsResponse(Windows.Data.Json.JsonObject json);
		ComicsResponse(Windows.Data.Json.JsonObject json,String fileServer);
		Windows.Foundation.Collections.IObservableVector<BikaClient.Blocks.ComicBlock> Comics;
	}
	runtimeclass BookInfoResponse : IResponse
	{
		BookInfoResponse(Windows.Data.Json.JsonObject json);
		BookInfoResponse(Windows.Data.Json.JsonObject json,String fileServer);
		BikaClient.Blocks.BookBlock BookInfos;
	}
	runtimeclass EpisodesResponse : IPage
	{
		EpisodesResponse(Windows.Data.Json.JsonObject json);
		Windows.Foundation.Collections.IObservableVector<BikaClient.Blocks.EpisodeBlock> Episodes;
	}
	runtimeclass PicturesResponse : IPage
	{
		PicturesResponse(Windows.Data.Json.JsonObject json);
		PicturesResponse(Windows.Data.Json.JsonObject json,String fileServer);
		Windows.Foundation.Collections.IObservableVector<BikaClient.Blocks.ImageBlock> Pictures;
		BikaClient.Blocks.EpisodeBlock Episode;
	}
	runtimeclass CommentsResponse : IPage
	{
		CommentsResponse(Windows.Data.Json.JsonObject json);
		CommentsResponse(Windows.Data.Json.JsonObject json,String fileServer);
		Windows.Foundation.Collections.IObservableVector<BikaClient.Blocks.CommentBlock> Comments;
		Windows.Foundation.Collections.IObservableVector<BikaClient.Blocks.CommentBlock> TopComments;
	}
	runtimeclass ActionResponse : IResponse
	{
		ActionResponse(Windows.Data.Json.JsonObject json);
		BikaClient.Responses.Actions Action();
	}
	runtimeclass KeywordsResponse : IResponse
	{
		KeywordsResponse(Windows.Data.Json.JsonObject json);
		Windows.Foundation.Collections.IObservableVector<BikaClient.Blocks.TagBlock> Keywords;
	}
	runtimeclass JsonResponse : IResponse
	{
		JsonResponse(Windows.Data.Json.JsonObject json);
		Windows.Data.Json.JsonObject Data;
	}
}